{"ast":null,"code":"var _jsxFileName = \"/Users/wildstyle/Documents/Dev/React/indecision/src/App.js\",\n  _s = $RefreshSig$();\n//useState required when updating element inner values\n//useEffect required when to load default values into element on load.\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet count = 0;\nconst add1 = () => {\n  count++;\n  console.log(count);\n  TemplateTwo();\n};\nconst minus1 = () => {\n  if (count != 0) {\n    --count;\n  }\n  console.log(count);\n};\nconst reset = () => {\n  count = 0;\n  console.log('Reset to ' + count);\n};\n\n//App component contains main function which generates html elemets programatically\nexport default function App() {\n  _s();\n  const [count, setAdvice] = useState(\"\");\n  async function getAdvice() {}\n\n  //assign function into useEffect method with second argument as empty array.\n  useEffect(() => {\n    getAdvice();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: add1,\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: minus1,\n      children: \"-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n\n  //Message component handles messages to end user.\n  //props perameter is collected to utilize useState within function.\n  function Message(props) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You have read \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: props.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }, this), \" pieces of advice.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(App, \"UZqXZSKZozfxvvQo7KvP1f1Syek=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","count","add1","console","log","TemplateTwo","minus1","reset","App","_s","setAdvice","getAdvice","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Message","props","_c","$RefreshReg$"],"sources":["/Users/wildstyle/Documents/Dev/React/indecision/src/App.js"],"sourcesContent":["//useState required when updating element inner values\n//useEffect required when to load default values into element on load.\nimport { useEffect, useState } from \"react\";\n\n\nlet count = 0;\nconst add1 = () => {\n  count++;\n  console.log(count);\n  TemplateTwo();\n};\n\nconst minus1 = () => {\n  if(count != 0){\n      --count;\n  }\n  console.log(count);\n}\n\nconst reset = () => {\n  count = 0;\n  console.log('Reset to ' + count);\n}\n\n//App component contains main function which generates html elemets programatically\nexport default function App() {\nconst [count, setAdvice] = useState(\"\");\n\n  async function getAdvice() {\n\n\n\n  }\n\n  //assign function into useEffect method with second argument as empty array.\n  useEffect(() => {\n    getAdvice();\n  }, []);\n\n  return (\n    <div>\n        <h1>Count: {count}</h1>\n        <button onClick={add1}>+1</button>\n        <button onClick={minus1}>-1</button>\n        <button onClick={reset}>Reset</button>\n    </div>\n  );\n\n  //Message component handles messages to end user.\n  //props perameter is collected to utilize useState within function.\n  function Message(props) {\n    return (\n      <p>\n        You have read <strong>{props.count}</strong> pieces of advice.\n      </p>\n    );\n  }\n}\n"],"mappings":";;AAAA;AACA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,IAAIC,KAAK,GAAG,CAAC;AACb,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjBD,KAAK,EAAE;EACPE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EAClBI,WAAW,CAAC,CAAC;AACf,CAAC;AAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACnB,IAAGL,KAAK,IAAI,CAAC,EAAC;IACV,EAAEA,KAAK;EACX;EACAE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;AACpB,CAAC;AAED,MAAMM,KAAK,GAAGA,CAAA,KAAM;EAClBN,KAAK,GAAG,CAAC;EACTE,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGH,KAAK,CAAC;AAClC,CAAC;;AAED;AACA,eAAe,SAASO,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACR,KAAK,EAAES,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAErC,eAAea,SAASA,CAAA,EAAG,CAI3B;;EAEA;EACAd,SAAS,CAAC,MAAM;IACdc,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,GAAI,SAAO,EAACX,KAAK;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBhB,OAAA;MAAQiB,OAAO,EAAEf,IAAK;MAAAU,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClChB,OAAA;MAAQiB,OAAO,EAAEX,MAAO;MAAAM,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpChB,OAAA;MAAQiB,OAAO,EAAEV,KAAM;MAAAK,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;;EAGR;EACA;EACA,SAASE,OAAOA,CAACC,KAAK,EAAE;IACtB,oBACEnB,OAAA;MAAAY,QAAA,GAAG,gBACa,eAAAZ,OAAA;QAAAY,QAAA,EAASO,KAAK,CAAClB;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,sBAC9C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAER;AACF;AAACP,EAAA,CAhCuBD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}