{"ast":null,"code":"var _jsxFileName = \"/Users/wildstyle/Documents/Dev/REACT/get_advise/src/App.js\",\n  _s = $RefreshSig$();\n//required when updating element inner values\nimport { useState } from \"react\";\n\n//App js contains main function which generates html elemets programatically\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  //create a new state to update dom element inner values\n  //perameter \"adv\" is the value to be placed in dom element as value\n  //perameter \"setAdvice\" is what wraps the data to be used by \"adv\" perameter\n  //useState perameter is the default string\n  const [adv, setAdvice] = useState(\"Hello World!\");\n\n  //async function fetches api data in json format.\n  //async requires a function to return a promise -( Producing Code & Consuming Code)\n  async function getAdvise() {\n    //await requires a function to return a promise (Producing Code)\n    const response = await fetch('https://api.adviceslip.com/advice');\n    //await requires a function to return a promise (Consuming Code)\n    const rawData = await response.json();\n    //example filter: rawData.slip[\"advice\"]\n    //example filter: rawData['slip']['advice']\n    //example filter: rawData.slip.advice\n    //example filter: rawData.slip.id\n    //example filter: rawData['slip']['id']\n    //example filter: rawData.slip[\"id\"]\n\n    console.log(rawData.slip.advice);\n    setAdvice(rawData.slip.advice);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: adv\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getAdvise,\n      children: \"Get Advise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You have read \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"23\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 30\n      }, this), \" piece\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"dfGEB5e5EfzPMyyGZMJHLj1CJwU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","adv","setAdvice","getAdvise","response","fetch","rawData","json","console","log","slip","advice","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/wildstyle/Documents/Dev/REACT/get_advise/src/App.js"],"sourcesContent":["//required when updating element inner values\nimport {useState} from \"react\";\n\n//App js contains main function which generates html elemets programatically\nexport default function App(){\n    //create a new state to update dom element inner values\n    //perameter \"adv\" is the value to be placed in dom element as value\n    //perameter \"setAdvice\" is what wraps the data to be used by \"adv\" perameter\n    //useState perameter is the default string\n    const [adv, setAdvice] = useState(\"Hello World!\");\n\n    //async function fetches api data in json format.\n    //async requires a function to return a promise -( Producing Code & Consuming Code)\n    async function getAdvise(){\n\n        //await requires a function to return a promise (Producing Code)\n        const response = await fetch('https://api.adviceslip.com/advice');\n        //await requires a function to return a promise (Consuming Code)\n        const rawData = await response.json();\n        //example filter: rawData.slip[\"advice\"]\n        //example filter: rawData['slip']['advice']\n        //example filter: rawData.slip.advice\n        //example filter: rawData.slip.id\n        //example filter: rawData['slip']['id']\n        //example filter: rawData.slip[\"id\"]\n\n        console.log(rawData.slip.advice);\n\n        setAdvice(rawData.slip.advice);\n    }\n\n    return (\n        <div>\n            <h1>{adv}</h1>\n            {/* add onClick perameter to button element */}\n            <button onClick={getAdvise}>Get Advise</button>\n            <p>You have read <strong>23</strong> piece</p>\n        </div>\n    );\n}"],"mappings":";;AAAA;AACA,SAAQA,QAAQ,QAAO,OAAO;;AAE9B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACzB;EACA;EACA;EACA;EACA,MAAM,CAACC,GAAG,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,cAAc,CAAC;;EAEjD;EACA;EACA,eAAeO,SAASA,CAAA,EAAE;IAEtB;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;IACjE;IACA,MAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACrC;IACA;IACA;IACA;IACA;IACA;;IAEAC,OAAO,CAACC,GAAG,CAACH,OAAO,CAACI,IAAI,CAACC,MAAM,CAAC;IAEhCT,SAAS,CAACI,OAAO,CAACI,IAAI,CAACC,MAAM,CAAC;EAClC;EAEA,oBACIb,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAKX;IAAG;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEdlB,OAAA;MAAQmB,OAAO,EAAEd,SAAU;MAAAS,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/ClB,OAAA;MAAAc,QAAA,GAAG,gBAAc,eAAAd,OAAA;QAAAc,QAAA,EAAQ;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,UAAM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEd;AAAChB,EAAA,CAnCuBD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}